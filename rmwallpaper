#!/usr/bin/python3

import os
import sys

from gi.repository import GdkPixbuf
from gi.repository import Gtk
from gi.repository import Gio

# The image's pixbuf is swapped out whenever the background image changes
i = Gtk.Image ()

f = Gtk.Frame ()
f.add (i)
f.set_shadow_type (Gtk.ShadowType.IN)

def db_clicked (button, f):
	f.delete (None)
	global db_handler
	button.disconnect (db_handler)
	del db_handler
	button.set_sensitive (False)

db = Gtk.Button (stock = Gtk.STOCK_DELETE)

cb = Gtk.Button (stock = Gtk.STOCK_CANCEL)
cb.connect ('clicked', Gtk.main_quit)

bb = Gtk.HButtonBox ()
bb.pack_start (db, True, True, 8)
bb.pack_end (cb, True, True, 8)

vb = Gtk.VBox ()
vb.pack_start (f, True, True, 0)
vb.pack_end (bb, False, True, 0)
vb.set_spacing (8)

w = Gtk.Window ()
w.connect ('delete-event', Gtk.main_quit)
w.set_border_width (8)
w.add (vb)
w.set_title ('Delete desktop background?')
w.set_position (Gtk.WindowPosition.CENTER)
w.set_resizable (False)
w.show_all ()

def on_changed (settings, key):
	if key == 'picture-uri':
		pic = Gio.File.new_for_uri (settings.get_string (key))
		pb = GdkPixbuf.Pixbuf.new_from_file_at_size (pic.get_path (), 400, 300)
		i.set_from_pixbuf (pb)

		global db_handler
		try:
			db.disconnect (db_handler)
		except NameError:
			pass
		db_handler = db.connect ('clicked', db_clicked, pic)
		db.set_sensitive (True)

c = Gio.Settings.new ('org.gnome.desktop.background')
c.connect ('changed', on_changed)
on_changed (c, 'picture-uri')

Gtk.main ()
